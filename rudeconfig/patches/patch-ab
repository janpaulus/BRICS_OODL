*** src/config.cpp	2005-06-03 05:36:58.000000000 +0200
--- ../../config_patch.cpp	2010-11-12 13:58:13.664526000 +0100
***************
*** 9,20 ****
  // it under the terms of the GNU General Public License as published by
  // the Free Software Foundation; either version 2, or (at your option)
  // any later version.
! // 
  // RudeConfig is distributed in the hope that it will be useful,
  // but WITHOUT ANY WARRANTY; without even the implied warranty of
  // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  // GNU General Public License for more details.
! // 
  // You should have received a copy of the GNU General Public License
  // along with RudeConfig; (see COPYING) if not, write to the Free Software
  // Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
--- 9,20 ----
  // it under the terms of the GNU General Public License as published by
  // the Free Software Foundation; either version 2, or (at your option)
  // any later version.
! //
  // RudeConfig is distributed in the hope that it will be useful,
  // but WITHOUT ANY WARRANTY; without even the implied warranty of
  // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  // GNU General Public License for more details.
! //
  // You should have received a copy of the GNU General Public License
  // along with RudeConfig; (see COPYING) if not, write to the Free Software
  // Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
***************
*** 51,57 ****
  	ver += ConfigImpl::version();
  	return ver.c_str();
  }
! 	
  	void Config::setDefaultConfigFile(const char *filepath)
  	{
  		ConfigImpl::setDefaultConfigFile(filepath);
--- 51,57 ----
  	ver += ConfigImpl::version();
  	return ver.c_str();
  }
! 
  	void Config::setDefaultConfigFile(const char *filepath)
  	{
  		ConfigImpl::setDefaultConfigFile(filepath);
***************
*** 220,225 ****
--- 220,227 ----
  
  bool Config::getBoolValue(const char *name) const
  {
+   if(!d_implementation->exists(name))
+     throw std::runtime_error(std::string("Key not found: ") + name);
  	return ConfigImpl::stringToBool(d_implementation->getStringValue(name));
  	//return d_implementation->getBoolValue(name);
  }
***************
*** 232,237 ****
--- 234,241 ----
  
  int Config::getIntValue(const char *name) const
  {
+   if(!d_implementation->exists(name))
+     throw std::runtime_error(std::string("Key not found: ") + name);
  	return ConfigImpl::stringToInt(d_implementation->getStringValue(name));
  	//return d_implementation->getIntValue(name);
  }
***************
*** 244,249 ****
--- 248,255 ----
  
  double Config::getDoubleValue(const char *name) const
  {
+   if(!d_implementation->exists(name))
+     throw std::runtime_error(std::string("Key not found: ") + name);
  	return ConfigImpl::stringToDouble(d_implementation->getStringValue(name));
  	//return d_implementation->getDoubleValue(name);
  }
***************
*** 255,260 ****
--- 261,268 ----
  
  const char * Config::getStringValue(const char *name) const
  {
+   if(!d_implementation->exists(name))
+     throw std::runtime_error(std::string("Key not found: ") + name);
  	return d_implementation->getStringValue(name);
  }
  
***************
*** 265,275 ****
--- 273,287 ----
  
  const char * Config::getValue(const char *name) const
  {
+   if(!d_implementation->exists(name))
+     throw std::runtime_error(std::string("Key not found: ") + name);
  	return d_implementation->getStringValue(name);
  }
  
  bool Config::deleteData(const char *name)
  {
+   if(!d_implementation->exists(name))
+     throw std::runtime_error(std::string("Key not found: ") + name);
  	return d_implementation->deleteData(name);
  }
  
